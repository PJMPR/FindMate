package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import domain.model.Profile;

public class ProfileRepository {

    private Connection connection;

    private Statement createTable;

    private String createTableSql="CREATE TABLE profile("
            + "profileId BIGINT GENERATED BY DEFAULT AS IDENTITY,"
            + "age INT, "
            + "firstName VARCHAR(20), "
            + "lastName VARCHAR(20), "
            + "city VARCHAR(20), "
            + "country VARCHAR(20), "
            + ")";

    private String insertSql="INSERT INTO profile(age,firstName,lastName,city,country) VALUES (?,?,?,?,?)";
    private String deleteSql="DELETE FROM profile WHERE profileId=?";
    private String updateSql="UPDATE profile SET age=?, firstName=?, lastName=?, city=?, country=? WHERE profileId=?";
    private String selectByIdSql="SELECT * FROM profile WHERE profileId=?";
    private String selectAllSql="SELECT * FROM profile";

    private PreparedStatement insert;
    private PreparedStatement delete;
    private PreparedStatement update;
    private PreparedStatement selectById;
    private PreparedStatement selectAll;

public ProfileRepository(Connection connection){
    this.connection=connection;

    try{
        createTable=connection.createStatement();
        boolean tableExists = false;
        ResultSet rs = connection.getMetaData().getTables(null,null,null,null);
        while(rs.next()){
            if(rs.getString("TABLE_NAME").equalsIgnoreCase("profile")){tableExists=true; break;}
        }
        if(!tableExists){
            createTable.executeUpdate(createTableSql);

            insert=connection.prepareStatement(insertSql);
            delete= connection.prepareStatement(deleteSql);
            update=connection.prepareStatement(updateSql);
            selectById=connection.prepareStatement(selectByIdSql);
            selectAll=connection.prepareStatement(selectAllSql);
        }
    }catch(SQLException e){e.printStackTrace();}

}

    public void add(Profile p){
        try{
            insert.setInt(1, p.getAge());
            insert.setString(2,p.getFirstName());
            insert.setString(3, p.getLastName());
            insert.setString(4, p.getCity());
            insert.setString(5, p.getCountry());

            insert.executeUpdate();
        }catch(SQLException e){e.printStackTrace();}
    }

    public void delete(Profile p){
        try{
            delete.setInt(1, p.getProfileId());
            delete.executeUpdate();
        }catch(SQLException e){e.printStackTrace();}
    }

    public void update(Profile p){
        try{
            update.setInt(1, p.getAge());
            update.setString(2, p.getFirstName());
            update.setString(3, p.getLastName());
            update.setString(4, p.getCity());
            update.setString(5, p.getCountry());
            update.setInt(6, p.getProfileId());

            update.executeUpdate();
        } catch(SQLException e){e.printStackTrace();}
    }

    public Profile get(int profileId){
        try{
            selectById.setInt(1, profileId);
            ResultSet rs = selectById.executeQuery();
            while(rs.next()){
                Profile result = new Profile();
                result.setProfileId(profileId);
                result.setAge(rs.getInt("age"));
                result.setFirstName(rs.getString("firstName"));
                result.setLastName(rs.getString("lastName"));
                result.setCity(rs.getString("city"));
                result.setCountry(rs.getString("country"));

                return result;
            }
        }catch(SQLException e){e.printStackTrace();}
        return null;
    }

    public List<Profile> getAll(){
        try{
            List<Profile> result = new ArrayList<Profile>();
            ResultSet rs = selectAll.executeQuery();
            while(rs.next()){
                Profile p = new Profile();
                p.setProfileId(rs.getInt("profileId"));
                p.setAge(rs.getInt("age"));
                p.setFirstName(rs.getString("firstName"));
                p.setLastName(rs.getString("lastName"));
                p.setCity(rs.getString("city"));
                p.setCountry(rs.getString("country"));
                result.add(p);

            }
            return result;

        }catch(SQLException e){e.printStackTrace();}
        return null;
    }

}
