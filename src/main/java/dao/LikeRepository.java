package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.List;

import domain.model.Like;

public class LikeRepository {

    private Connection connection;

    private String createTableSql = "CREATE TABLE like("
            + "likeId bigint GENERATED BY DEFAULT AS IDENTITY,"
            + "sendDate DATE,"
            + "likeFrom INT,"
            + "likeTo INT,"
            + ")";

    private Statement createTable;

    private String insertSql = "INSERT INTO like(sendDate,likeFrom,likeTo) VALUES(?,?,?)";
    private String deleteSql = "DELETE FROM like WHERE likeId = ?";
    private String updateSql = "UPDATE account set sendDate=?, likeFrom=?, likeTo=? WHERE likeId=?";
    private String selectByIdSql = "SELECT * FROM like WHERE likeId=?";
    private String selectAllSql = "SELECT * FROM like";

    private PreparedStatement insert;
    private PreparedStatement delete;
    private PreparedStatement update;
    private PreparedStatement selectById;
    private PreparedStatement selectAll;

    public LikeRepository(Connection connection) {
        this.connection = connection;

        try {
            createTable = connection.createStatement();

            boolean tableExists = false;
            ResultSet rs = connection.getMetaData().getTables(null, null, null, null);
            while(rs.next()){
                if(rs.getString("TABLE_NAME").equalsIgnoreCase("like")){
                    tableExists=true;
                    break;
                }
            }
            if(!tableExists)
                createTable.executeUpdate(createTableSql);



        } catch (SQLException e) {
            e.printStackTrace();
        }
    }

    public void delete(Like li){
        try{
            delete.setInt(1, li.getId());
            delete.executeUpdate();
        }catch(SQLException ex){
            ex.printStackTrace();
        }
    }

    public void add(Like li){
        try{

            insert.setString(1, li.getSendDate().toString());
            insert.setInt(3, li.getLikeFrom());
            insert.setInt(4, li.getLikeTo());
            insert.executeUpdate();

        }catch(SQLException ex){
            ex.printStackTrace();
        }

    }
    
    public void update(Like li){
        try{

            update.setString(1, li.getSendDate().toString());
            update.setInt(2, li.getLikeFrom());
            update.setInt(3, li.getLikeTo());
            update.executeUpdate();

        }catch(SQLException ex){
            ex.printStackTrace();
        }
}
    public Like get(int likeId){
        try{

            selectById.setInt(1, likeId);
            ResultSet rs = selectById.executeQuery();
            while(rs.next()){
                Like result = new Like();
                result.setId(likeId);
                result.setSendDate(rs.getDate("sendDate"));
                result.setLikeFrom(rs.getInt("likeFrom"));
                result.setLikeTo(rs.getInt("likeTo"));
                return result;
            }
        }
        catch(SQLException ex){
            ex.printStackTrace();
        }
        return null;
    }
    
    public List<Like> getAll(){
        try{
            List<Like> result = new ArrayList<Like>();
            ResultSet rs = selectAll.executeQuery();
            while(rs.next()){
                Like li = new Like();
                li.setId(rs.getInt("likeId"));
                li.setSendDate(rs.getDate("sendDate"));
                li.setLikeFrom(rs.getInt("likeFrom"));
                li.setLikeTo(rs.getInt("likeTo"));
                result.add(li);
            }
            return result;
        }
        catch(SQLException ex){
            ex.printStackTrace();
        }
        return null;
    }
    
    
}